apiVersion: apps/v1
kind: Deployment
metadata:
  name: reality-event-orchestrator
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics"
spec:
  replicas: 1
  selector: { matchLabels: { app: reality-event-orchestrator } }
  template:
    metadata: { labels: { app: reality-event-orchestrator } }
    spec:
      containers:
        - name: event-orchestrator
          image: ghcr.io/your-org/reality-event-orchestrator:latest
          ports: [ { containerPort: 8081 } ]
          envFrom:
            - configMapRef: { name: reality-env }
            - secretRef: { name: reality-secrets }
          env:
          # no extra env
          livenessProbe: { httpGet: { path: /health, port: 8081 }, initialDelaySeconds: 5, periodSeconds: 10 }
          readinessProbe: { httpGet: { path: /health, port: 8081 }, initialDelaySeconds: 3, periodSeconds: 10 }
---
apiVersion: v1
kind: Service
metadata:
  name: reality-event-orchestrator
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics"
spec:
  selector: { app: reality-event-orchestrator }
  ports: [ { port: 8081, targetPort: 8081 } ]
